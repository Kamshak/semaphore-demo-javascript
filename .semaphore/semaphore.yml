version: v1.0
name: Semaphore JavaScript Example Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: "\U0001F4E6 Install dependencies"
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      prologue:
        commands:
          - checkout
          - nvm use
          - node --version
      jobs:
        - name: yarn install
          commands:
            - cache restore client-node-modules-$(checksum yarn.lock)
            - yarn --frozen-lockfile --prefer-offline
            - cache store client-node-modules-$(checksum yarn.lock) node_modules
      agent:
        machine:
          type: e1-standard-4
          os_image: ubuntu2004
    dependencies: []
  - name: "\U0001F50D Lint"
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      prologue:
        commands:
          - checkout
          - nvm use
          - node --version
          - npm --version
      jobs:
        - name: Lint and test all
          commands:
            - cache restore client-node-modules-$(checksum yarn.lock)
            - yarn nx run-many --target lint --all --parallel --maxParallel 8
            - yarn nx run-many --target test --all --parallel --maxParallel 8
      agent:
        machine:
          type: e1-standard-4
          os_image: ubuntu2004
    dependencies:
      - "\U0001F4E6 Install dependencies"
  - name: 'Block #3'
    dependencies:
      - "\U0001F4E6 Install dependencies"
    task:
      agent:
        machine:
          type: e1-standard-8
          os_image: ubuntu2004
      jobs:
        - name: Build all
          commands:
            - yarn nx run-many --target monorepo-build --configuration staging --all --parallel --maxParallel 4
after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
